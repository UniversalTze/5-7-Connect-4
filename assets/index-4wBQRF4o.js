var M=Object.defineProperty;var H=(a,t,r)=>t in a?M(a,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[t]=r;var n=(a,t,r)=>H(a,typeof t!="symbol"?t+"":t,r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function r(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(e){if(e.ep)return;e.ep=!0;const i=r(e);fetch(e.href,i)}})();const g=7,b=7,m=-1,h=0,$="#504f4f",T="#cf4242",w="#ddaf24",P=["white"],C=1,N=6,y=4,A=0,k=1,_=2,R=3,j=1e4,W=100,G=3e4,V=2,q=1;class Y{constructor(){n(this,"row");n(this,"col");n(this,"board");n(this,"prevBoard");this.row=b,this.col=g,this.board=new Array(b).fill(h).map(()=>new Array(g).fill(h)),this.prevBoard=new Array(b).fill(h).map(()=>new Array(g).fill(h))}getBoard(){return this.board}getPrevBoard(){return this.prevBoard}getRow(){return this.row}getCol(){return this.col}getTopTokenRow(t){for(let r=this.row-1;r>=0;r--)if(this.board[r][t]===h)return r;return-1}placeToken(t,r){return this.board[0][t]!==h?!1:(this.board[0][t]=r,!0)}checkTokenFall(t,r){return this.board[t][r]!==h&&this.board[t+1][r]===h}tokenFall(){let t=this.board.map(o=>[...o]),r=!1;for(let o=0;o<this.row-1;o++)for(let e=0;e<this.col;e++)this.checkTokenFall(o,e)&&(t[o][e]=h,t[o+1][e]=this.board[o][e],r=!0);return this.prevBoard=this.board,this.board=t,r}rotateBoard(t){let r=new Array(this.row).fill(h).map(()=>new Array(this.col).fill(h));switch(t){case 90:for(let o=0;o<this.row;o++)for(let e=0;e<this.col;e++)r[e][this.row-1-o]=this.board[o][e];break;case 180:for(let o=0;o<this.row;o++)for(let e=0;e<this.col;e++)r[this.row-1-o][this.col-1-e]=this.board[o][e];break;case 270:for(let o=0;o<this.row;o++)for(let e=0;e<this.col;e++)r[this.col-1-e][o]=this.board[o][e];break}this.prevBoard=this.board,this.board=r}copyCombo(t,r,o,e,i){if(t===o)for(let s=r;s<=e;s++)i[t][s]=this.board[t][s];else if(r===e)for(let s=t;s<=o;s++)i[s][r]=this.board[s][r];else{let s=-1,l=-1;t<o&&(s=1),r<e&&(l=1);let c=t,p=r;for(;c!=o&&p!=e;)i[c][p]=this.board[c][p],c+=s,p+=l;i[o][e]=this.board[o][e]}}checkHorizontal(t,r){let o=!1;for(let e=0;e<this.row;e++){let i=1;for(let s=0;s<this.col;s++)s!==this.col-1&&this.board[e][s]!==h&&this.board[e][s]===this.board[e][s+1]?i++:(i>=y&&(this.copyCombo(e,s-i+1,e,s,r),t[this.board[e][s]-1]+=i,o=!0),i=1)}return o}checkVertical(t,r){let o=!1;for(let e=0;e<this.col;e++){let i=1;for(let s=0;s<this.row;s++)s!==this.row-1&&this.board[s][e]!==h&&this.board[s][e]===this.board[s+1][e]?i++:(i>=y&&(this.copyCombo(s-i+1,e,s,e,r),t[this.board[s][e]-1]+=i,o=!0),i=1)}return o}checkDiagonal(t,r){let o=!1;for(let e=0;e<this.row;e++)for(let i=0;i<this.col;i++){let s=1,l=1;for(;e+l<this.row&&i+l<this.col&&(this.board[e][i]!==h&&this.board[e][i]===this.board[e+l][i+l]);){s++;l++}s>=y&&(this.copyCombo(e,i,e+s-1,i+s-1,r),t[this.board[e][i]-1]+=s,o=!0)}for(let e=0;e<this.row;e++)for(let i=0;i<this.col;i++){let s=1,l=1;for(;e+l<this.row&&i-l>=0&&(this.board[e][i]!==h&&this.board[e][i]===this.board[e+l][i-l]);){s++;l++}s>=y&&(this.copyCombo(e,i,e+s-1,i-s+1,r),t[this.board[e][i]-1]+=s,o=!0)}return o}checkComboFromToken(t,r,o,e,i,s){let l=1,c=e,p=o,O=e,v=o,B=!1;for(let u=1;u<N;u++){let d=e-u*i,f=o-u*s;if(d>=0&&d<this.row&&f>=0&&f<this.col&&this.board[d][f]===this.board[e][o])l++,p=f,c=d;else break}for(let u=1;u<N;u++){let d=e+u*i,f=o+u*s;if(d>=0&&d<this.row&&f>=0&&f<this.col&&this.board[d][f]===this.board[e][o])l++,v=f,O=d;else break}return l>=y&&(this.copyCombo(c,p,O,v,r),t[this.board[e][o]-1]+=l,B=!0),B}checkForCombos(t,r,o=-1,e=-1){let i=!1;if(o===C)i=i||this.checkHorizontal(t,r),i=i||this.checkVertical(t,r),i=i||this.checkDiagonal(t,r);else{let s=this.getTopTokenRow(e);if(s===-1)return console.log("Token pos is not valid"),!1;i=i||this.checkComboFromToken(t,r,e,s,1,0),i=i||this.checkComboFromToken(t,r,e,s,0,1),i=i||this.checkComboFromToken(t,r,e,s,1,1),i=i||this.checkComboFromToken(t,r,e,s,1,-1)}return i}clearCombos(t,r=-1,o=-1){let e=new Array(this.row).fill(h).map(()=>new Array(this.col).fill(h)),i=[0,0],s=this.board.map(l=>[...l]);if(o===C){if(!this.checkForCombos(i,e,C))return!1}else{if(r<0||r>=this.col)return console.log("Invalid column"),!1;if(!this.checkForCombos(i,e,r=r))return!1}for(let l=0;l<this.row;l++)for(let c=0;c<this.col;c++)e[l][c]!==h&&(s[l][c]=h);return this.prevBoard=this.board,this.board=s,t[0]=i[0],t[1]=i[1],!0}}class U{animateBoard(t){for(let r=0;r<t.length;r++)for(let o=0;o<t[r].length;o++)t[r][o]==0&&this.setPixelColor(r,o,$),t[r][o]==1?this.setPixelColor(r,o,T):t[r][o]==2&&this.setPixelColor(r,o,w)}animateComboClear(t,r){for(let o=0;o<t.length;o++)for(let e=0;e<t[o].length;e++)t[o][e]==r[o][e]?t[o][e]==1?this.setPixelColor(o,e,T):t[o][e]==2&&this.setPixelColor(o,e,w):t[o][e]==1?this.flashPixel(o,e,T):t[o][e]==2&&this.flashPixel(o,e,w)}updateScoreDisplay(t,r){const o=document.getElementById("display-0");o&&(o.innerText=t.toString());const e=document.getElementById("display-3");e&&(e.innerText=r.toString())}setPixelColor(t,r,o){const e=document.querySelector(`[data-row="${t}"][data-col="${r}"]`);e&&(e.style.backgroundColor=o)}flashPixel(t,r,o){const e=document.querySelector(`[data-row="${t}"][data-col="${r}"]`);if(e){const i=e.style.backgroundColor,s=500;this.setPixelColor(t,r,P[0]),setTimeout(()=>{this.setPixelColor(t,r,o)},s),setTimeout(()=>{this.setPixelColor(t,r,P[0])},s*2),setTimeout(()=>{this.setPixelColor(t,r,i)},s*3)}}flashPixel2(t,r,o){const e=document.querySelector(`[data-row="${t}"][data-col="${r}"]`);if(e){const i=e.style.backgroundColor,s=500;this.setPixelColor(t,r,P[0]),setTimeout(()=>{this.setPixelColor(t,r,o)},s),setTimeout(()=>{this.setPixelColor(t,r,P[0])},s*2),setTimeout(()=>{this.setPixelColor(t,r,i)},s*3)}}something(t){return t==1500}placeholder(t,r){for(let o=0;o<g;o++)for(let e=0;e<b;e++)t[o][e]!=r[o][e]&&this.setPixelColor(o,e,"white")}}class x{constructor(t,r){n(this,"playerScore");n(this,"playerName");this.playerScore=t,this.playerName=r}getPlayerScore(){return this.playerScore}getPlayerName(){return this.playerName}addPlayerScore(t){this.playerScore=this.playerScore+t}}const L=21,K=3e4,z=12e4;class X{constructor(){n(this,"moveTimeoutId",null);n(this,"rotateIntervalId",null);n(this,"player1turn");n(this,"p1haswon");n(this,"p2haswon");n(this,"player1");n(this,"player2");this.player1=new x(0,"Player1"),this.player2=new x(0,"Player2"),this.player1turn=!0,this.p1haswon=!1,this.p2haswon=!1}startGame(){this.startRotationCountdown(),this.startTurn(this.player1turn)}switchTurn(){this.player1turn=!this.player1turn}rotateBoard(){console.log("Board is rotating!!!!!!")}startRotationCountdown(){this.rotateIntervalId=setInterval(()=>{this.rotateBoard()},z)}getPlayer1turn(){return this.player1turn}skipTurn(t){console.log("Player's turn has been skipped"),this.switchTurn()}startTurn(t){console.log("Countdown for player's turn begins now"),this.moveTimeoutId=setTimeout(()=>{this.skipTurn(t)},K)}processPlayerMove(t){this.moveTimeoutId!=null&&clearTimeout(this.moveTimeoutId),this.switchTurn(),this.switchTurn()}checkWin(){return this.player1.getPlayerScore()>=L?this.p1haswon=!0:this.player2.getPlayerScore()>=L&&(this.p2haswon=!0),!!(this.p1haswon||this.p2haswon)}checkPlayerWin(){if(this.p1haswon&&this.p2haswon)console.log("Draw has occured");else if(this.p1haswon)return console.log("Player 1 has won"),this.player1;return console.log("Player 2 has won"),this.player2}getCurrentPlayer(){return this.player1turn?1:2}getPlayerOne(){return this.player1}getPlayerTwo(){return this.player2}}class J{constructor(t,r,o){n(this,"columnInput",m);n(this,"setPixelColor");n(this,"setDisplayNumber");n(this,"setBorderColor");n(this,"previousTime",0);n(this,"previousRotationTime",0);n(this,"game",new X);n(this,"board",new Y);n(this,"display",new U);n(this,"playerHasWon",!1);n(this,"state",-1);n(this,"previousValidColumnInput",-1);this.setPixelColor=t,this.setDisplayNumber=r,this.setBorderColor=o}setup(){this.changeState(A,Date.now()),this.previousRotationTime=Date.now()}loop(){let t=Date.now(),r=Math.max(0,G-(t-this.previousRotationTime));switch(this.setDisplayNumber(q,r/1e3),this.state){case A:let o=j-(t-this.previousTime);if(this.setDisplayNumber(V,o/1e3),r<=0&&(console.log("uh oh! board is rotatin!"),this.board.rotateBoard(90),this.display.animateBoard(this.board.getBoard()),this.changeState(k,t),this.previousRotationTime=t),o<=0){console.log(`player ${this.game.getCurrentPlayer()} ran out of time`),this.previousTime=t,this.game.switchTurn(),this.game.getCurrentPlayer()==1?this.setBorderColor(T):this.setBorderColor(w);break}if(this.columnInput==m)break;console.log(`token detected at ${this.columnInput}`),this.board.placeToken(this.columnInput,this.game.getCurrentPlayer())?(console.log("valid column"),this.previousValidColumnInput=this.columnInput,this.display.animateBoard(this.board.getBoard()),this.changeState(k,t),this.game.switchTurn()):console.log("invalid column"),this.columnInput=m;break;case k:if(t-this.previousTime>=W){let i=this.board.tokenFall();if(this.previousTime=t,i)this.display.animateBoard(this.board.getBoard());else{let s=[0,0],l=this.board.clearCombos(s,this.previousValidColumnInput,C);this.previousValidColumnInput=m,this.game.getPlayerOne().addPlayerScore(s[0]),this.game.getPlayerTwo().addPlayerScore(s[1]),this.display.updateScoreDisplay(this.game.getPlayerOne().getPlayerScore(),this.game.getPlayerTwo().getPlayerScore()),l?(console.log("linefound"),this.changeState(_,t),this.display.placeholder(this.board.getPrevBoard(),this.board.getBoard())):(this.changeState(A,t),this.game.getCurrentPlayer()==1?this.setBorderColor(T):this.setBorderColor(w))}}break;case _:t-this.previousTime>=1e3&&(this.display.animateBoard(this.board.getBoard()),console.log("pretend animation done, go back to tokens falling"),this.changeState(k,t),this.game.checkWin()&&this.changeState(R,t));break;case R:let e=this.game.checkPlayerWin();this.playerHasWon||(e===this.game.getPlayerOne()?alert("player 1 wins, refresh to restart"):alert("player 2 wins, refresh to restart"),this.playerHasWon=!0)}this.columnInput!=m&&console.log("ERROR: token detected outside wait for token state"),this.columnInput=m}changeState(t,r){this.state=t,this.previousTime=r}}const E=document.getElementById("board"),F=g,I=b;E.style.gridTemplateColumns=`repeat(${I}, 80px)`;E.style.gridTemplateRows=`repeat(${F}, 80px)`;for(let a=0;a<F*I;a++){const t=document.createElement("div");t.classList.add("cell"),t.dataset.col=(a%I).toString(),t.dataset.row=Math.floor(a/I).toString(),t.addEventListener("click",Q),E.appendChild(t)}function Q(a){const t=a.target,r=parseInt(t.dataset.col);S.columnInput=r}function Z(a,t){const r=document.querySelector(`#display-${a}`);a!=null&&(a==1||a==2?r.innerHTML=t.toFixed(1):r.innerHTML=t.toString())}function ee(a,t,r){const o=document.querySelector(`[data-col="${t}"][data-row="${a}"]`);o!=null&&(o.style.backgroundColor=r)}function te(a){E.style.borderColor=a}const S=new J(ee,Z,te);window.arduino=S;S.setup();function D(){S.loop(),requestAnimationFrame(D)}requestAnimationFrame(D);
